/*
 Modifications performed to this file by anyone other than Solid State Networks
 are unsupported and may void your software warranty.
*/
$(document).ready(function(){host.assert("3.6.8.1"===app.expandString("{AppVersion}"),"Invalid application version")});function Patch(a){this.instanceId=a}Patch.prototype.release=function(){interop.releaseInstance(this.instanceId)};Patch.prototype.getFileName=function(){return interop.invoke(this.instanceId,{method:"getFileName"})};Patch.prototype.setFileName=function(a){return interop.invoke(this.instanceId,{method:"setFileName",value:a})};
Patch.prototype.getShortFileName=function(){return interop.invoke(this.instanceId,{method:"getShortFileName"})};Patch.prototype.getRunningTime=function(){return interop.invoke(this.instanceId,{method:"getRunningTime"})};Patch.prototype.getCurrentItemName=function(){return interop.invoke(this.instanceId,{method:"getCurrentItemName"})};Patch.prototype.getOutputDirectory=function(){return interop.invoke(this.instanceId,{method:"getOutputDirectory"})};
Patch.prototype.setOutputDirectory=function(a){return interop.invoke(this.instanceId,{method:"setOutputDirectory",value:a})};Patch.prototype.getWriteRates=function(){return interop.invoke(this.instanceId,{method:"getWriteRates"})};Patch.prototype.getMaskExists=function(){return interop.invoke(this.instanceId,{method:"getMaskExists"})};Patch.prototype.getRemainingTime=function(){return interop.invoke(this.instanceId,{method:"getRemainingTime"})};
Patch.prototype.getTotalBytes=function(){return interop.invoke(this.instanceId,{method:"getTotalBytes"})};Patch.prototype.getBytesLeft=function(){return interop.invoke(this.instanceId,{method:"getBytesLeft"})};Patch.prototype.getLastErrorType=function(){return interop.invoke(this.instanceId,{method:"getLastErrorType"})};Patch.prototype.getLastError=function(){return interop.invoke(this.instanceId,{method:"getLastError"})};
Patch.prototype.getFileAttempt=function(){return interop.invoke(this.instanceId,{method:"getFileAttempt"})};Patch.prototype.getSelfUpdate=function(){return interop.invoke(this.instanceId,{method:"getSelfUpdate"})};Patch.prototype.getItemDiskInfo=function(a,b){return interop.invoke(this.instanceId,{method:"getItemDiskInfo",filename:a,inOutParams:b})};Patch.prototype.resetDiskInfo=function(){return interop.invoke(this.instanceId,{method:"resetDiskInfo"})};
Patch.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};Patch.prototype.resume=function(){return interop.invoke(this.instanceId,{method:"resume"})};Patch.prototype.skip=function(){return interop.invoke(this.instanceId,{method:"skip"})};Patch.prototype.fail=function(){return interop.invoke(this.instanceId,{method:"fail"})};Patch.prototype.maskReset=function(){return interop.invoke(this.instanceId,{method:"maskReset"})};
Patch.prototype.maskAdd=function(a){return interop.invoke(this.instanceId,{method:"maskAdd",filename:a})};function createPatch(){return interop.createInstance("SSN.Patch",Patch)}
function PatchChannel(){this.instanceId=app.expandString("{Guid}");this.currentState=-1;this.fastVerify=this.isRunning=!1;this.versionVerify=createPatchVersionVerify();this.manifest=createPatchManifest();this.httpRequest=createHttpRequest();this.httpRequest.setUseCache(!0);this.httpRequest.setType(httpRequestType.GET);this.maskedFiles=[];this.patchesRequired=[];this.patchesUpcoming=[];this.observers=[];this.timeStop=this.timeStart=0;this.allowPartial=!0;var a=this;this.observers.push(notificationCenter.addInstanceObserver("PatchManifest",
"LoadComplete",this.manifest,function(b,c){a.onManifestLoadComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchManifest","Patch",this.manifest,function(b,c){a.onManifestPatch(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchManifest","Complete",this.manifest,function(b,c){a.onManifestComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("HttpRequest","Complete",this.httpRequest,function(b,c){a.onManifestDownloadComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionVerify",
"Start",this.versionVerify,function(b,c){a.onVerifyStart(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionVerify","CorruptFile",this.versionVerify,function(b,c){a.onVerifyCorruptFile(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionVerify","Complete",this.versionVerify,function(b,c){a.onVerifyComplete(c)}))}
PatchChannel.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.versionVerify)||(this.versionVerify.release(),this.versionVerify=null);isNull(this.manifest)||(this.manifest.release(),this.manifest=null);isNull(this.httpRequest)||(this.httpRequest.release(),this.httpRequest=null)};PatchChannel.prototype.cleanLocalManifest=function(){this.manifest.clean(!0,!1)};
PatchChannel.prototype.changeState=function(a){var b;if(a!==this.currentState)switch(b=this.currentState,this.currentState=a,notificationCenter.fire("PatchChannel","StateChange",this,{state:a,previousState:b}),a){case patchChannelState.COMPLETE:this.manifest.clean(!0,0>this.manifest.getUpcomingReleaseId());this.timeStop=app.getCurrentTime();this.isRunning=!1;notificationCenter.fire("PatchChannel","Complete",this,{successful:!0});break;case patchChannelState.FAIL:this.manifest.clean(!0,!1),this.timeStop=
app.getCurrentTime(),this.isRunning=!1,notificationCenter.fire("PatchChannel","Complete",this,{successful:!1})}};PatchChannel.prototype.onManifestLoadComplete=function(){isNull(this.requiredReleaseId)||this.manifest.setRequiredReleaseId(this.requiredReleaseId);isNull(this.upcomingReleaseId)||this.manifest.setUpcomingReleaseId(this.upcomingReleaseId);this.manifest.setSourceReleaseSHA1(this.manifest.expandString(this.sourceRelease));this.manifest.setTargetReleaseSHA1(this.manifest.expandString(this.targetRelease))};
PatchChannel.prototype.onManifestPatch=function(a){var b;b={};b.name="{0}_{1}to{2}".format(this.manifest.getName(),a.fromId,a.toId);b.fromId=a.fromId;b.toId=a.toId;b.size=a.size;b.outputDirectory=app.expandString(this.manifest.getTargetDirectory());b.patchDirectory=this.manifest.expandString("{PatchDirectory}");b.filename=b.patchDirectory+b.name+".zip";b.metafileUrl=app.expandString(this.manifest.getExtraDataValue(a.fromId,a.toId,"MetafileUrl"));b.versionFilename=this.manifest.expandString("{VersionPath}");
b.versionName=this.manifest.expandString("{VersionName}");b.uninstall=!1;b.versionUpdate=!1;b.allowPartial=this.allowPartial;b.isUpcoming=this.manifest.getTargetReleaseId()===this.manifest.getUpcomingReleaseId();b.maskedFiles=this.maskedFiles;notificationCenter.fire("PatchChannel","PatchConfigure",this,{patchInfo:b});0>=b.metafileUrl.length?(app.debugPrint("Unable to find metafile for {0}\n".format(b.name)),this.lastError=patcherError.getPatchManifestError(patchManifestError.MISSINGMETAFILE)):!0===
b.isUpcoming?(b.maskedFiles=[],this.patchesUpcoming.push(b)):(0===b.maskedFiles.length&&(0===this.patchesRequired.length&&!0===this.isUninstalling)&&(b.uninstall=!0,b.maskedFiles=[]),this.patchesRequired.push(b))};
PatchChannel.prototype.onManifestComplete=function(a){if(0<=this.manifest.getRequiredReleaseId()&&!0===this.isUninstalling&&this.manifest.getTargetReleaseId()===this.manifest.getRequiredReleaseId()&&this.manifest.getCurrentReleaseId()!==this.manifest.getRequiredReleaseId()&&0<=this.manifest.getSourceReleaseId())this.maskedFiles=[],this.patchesRequired=[],this.patchesUpcoming=[],this.sourceRelease="{EmptyReleaseSHA1}",this.targetRelease="{RequiredReleaseSHA1}",this.manifest.start();else if(!1===a.successful)a=
this.manifest.getLastError(),this.lastError=patcherError.getPatchManifestError(a),a===patchManifestError.REQUIRESELEVATION&&host.elevate(),this.changeState(patchChannelState.FAIL);else if(0!==this.lastError)this.changeState(patchChannelState.FAIL);else if(0<=this.manifest.getRequiredReleaseId()){if(!0===this.isUpdatingVersion)if(this.manifest.getCurrentReleaseId()!==this.manifest.getRequiredReleaseId()){for(this.patchesUpcoming=[];1<this.patchesRequired.length;)this.patchesRequired.shift();this.patchesRequired[0].maskedFiles=
[this.manifest.expandString("{VersionName}")];this.patchesRequired[0].uninstall=!1;this.patchesRequired[0].versionUpdate=!0}else this.patchesRequired=[],this.patchesUpcoming=[];else if(!0===this.isRepairing)this.isRepairing=!1,this.isVerifying=!0;else{if(this.manifest.getTargetReleaseId()===this.manifest.getRequiredReleaseId()){this.sourceRelease="{RequiredReleaseSHA1}";this.targetRelease="{UpcomingReleaseSHA1}";this.manifest.start();return}this.sourceRelease="{CurrentReleaseSHA1}";this.targetRelease=
"{RequiredReleaseSHA1}"}if(!0===this.isVerifying&&(this.isVerifying=!1,a=this.manifest.expandString("{VersionPath}"),!0===platform.fileExists(a))){this.changeState(patchChannelState.VERIFY);this.versionVerify.setFileName(a);this.versionVerify.setAllowQuickScan(this.fastVerify);this.versionVerify.setAllowDeepScan(!0);this.versionVerify.start();return}0<this.patchesRequired.length||0<this.patchesUpcoming.length?(this.manifest.expandString("{VersionPath}"),this.changeState(patchChannelState.QUEUED),
notificationCenter.fire("PatchChannel","PatchPending",this,{required:this.patchesRequired,upcoming:this.patchesUpcoming}),this.patchesRequired=[],this.patchesUpcoming=[]):(this.patchesRequired=[],this.patchesUpcoming=[],notificationCenter.fire("PatchChannel","UpToDate",this,{}))}else this.httpRequest.reset(),this.httpRequest.start()};
PatchChannel.prototype.onManifestDownloadComplete=function(a){304===a.httpCode?this.changeState(patchChannelState.COMPLETE):200!==a.httpCode?(this.lastError=patcherError.getPatchManifestError(patchManifestError.DOWNLOADFAIL),this.changeState(patchChannelState.FAIL)):this.manifest.start()};PatchChannel.prototype.onVerifyStart=function(){this.patchesRequired=[];this.patchesUpcoming=[];this.maskedFiles=[]};PatchChannel.prototype.onVerifyCorruptFile=function(a){this.maskedFiles.push(a.name)};
PatchChannel.prototype.onVerifyComplete=function(){0===this.maskedFiles.length?this.reset():(!0===this.versionVerify.getSelfUpdate()&&this.setUninstall(!0),!0===this.isUninstalling&&(this.maskedFiles=[],this.isRepairing=this.isUpdatingVersion=!1,this.sourceRelease="{EmptyReleaseSHA1}",this.targetRelease="{RequiredReleaseSHA1}"));this.changeState(patchChannelState.GETMANIFEST);this.manifest.start()};PatchChannel.prototype.getRequiredCount=function(){return this.patchesRequired.length};
PatchChannel.prototype.getState=function(){return this.currentState};PatchChannel.prototype.getLastError=function(){return this.lastError};PatchChannel.prototype.setUrl=function(a){if(!0===this.isRunning)host.assert(!1,"Unable to update patch channel url while already running");else{var b=host.urlToFileName(a,"{LocalStorage}",".patchmanifest");this.manifest.setFilename(b);this.httpRequest.setUrl(a);this.httpRequest.setFileName(b)}};
PatchChannel.prototype.setUninstall=function(a){this.isUninstalling=a};PatchChannel.prototype.setFastVerify=function(a){this.fastVerify=a};PatchChannel.prototype.setAllowPartial=function(a){this.allowPartial=a};PatchChannel.prototype.setRequiredReleaseId=function(a){this.requiredReleaseId=a};PatchChannel.prototype.setUpcomingReleaseId=function(a){this.upcomingReleaseId=a};
PatchChannel.prototype.reset=function(){this.isVerifying=this.isRepairing=this.isUpdatingVersion=!1;this.lastError=0;this.maskedFiles=[];this.patchesRequired=[];this.patchesUpcoming=[];this.timeStart=app.getCurrentTime();this.timeStop=0;this.sourceRelease="{CurrentReleaseSHA1}";this.targetRelease="{RequiredReleaseSHA1}"};
PatchChannel.prototype.resume=function(a,b){!1===this.isRunning?host.assert(!1,"Unable to resume patch channel while not running"):!0===a?!0===this.isUpdatingVersion?(this.isUpdatingVersion=!1,this.isRepairing=!0,this.changeState(patchChannelState.GETMANIFEST),this.manifest.start()):(!1===this.isRepairing&&!1===this.isUpdatingVersion&&(this.sourceRelease="{CurrentReleaseSHA1}"),this.manifest.getTargetReleaseId()!==this.manifest.getCurrentReleaseId()&&this.manifest.getTargetReleaseId()!==this.manifest.getUpcomingReleaseId())?
(this.changeState(patchChannelState.GETMANIFEST),this.manifest.start()):(this.httpRequest.reset(),this.httpRequest.start()):(this.lastError=b,this.changeState(patchChannelState.FAIL))};PatchChannel.prototype.update=function(){!0===this.isRunning?host.assert(!1,"Unable to update patch channel while already running"):(this.reset(),this.isRunning=!0,notificationCenter.fire("PatchChannel","Start",this,{repair:!1}),this.changeState(patchChannelState.GETMANIFEST),this.manifest.start())};
PatchChannel.prototype.repair=function(){!0===this.isRunning?host.assert(!1,"Unable to repair patch channel while already running"):(this.reset(),this.isUpdatingVersion=this.isRunning=!0,this.sourceRelease="{EmptyReleaseSHA1}",notificationCenter.fire("PatchChannel","Start",this,{repair:!0}),this.changeState(patchChannelState.GETMANIFEST),this.manifest.start())};PatchChannel.prototype.getRunningTime=function(){return 0<this.timeStop?this.timeStop-this.timeStart:app.getCurrentTime()-this.timeStart};
function createPatchChannel(){return new PatchChannel}function PatchChannelState(){this.GETMANIFEST=0;this.QUEUED=1;this.VERIFY=2;this.COMPLETE=3;this.FAIL=4}PatchChannelState.prototype.nameFromId=function(a){return["GetManifest","Optional","Verifying","Complete","Fail"][a]};var patchChannelState=new PatchChannelState;
function PatchController(a){var b=this;this.instanceId=app.expandString("{Guid}");this.observers=[];this.fastVerify=this.uninstall=this.isLaunching=!1;this.currentState=patchControllerState.IDLE;this.patchChannel=createPatchChannel();this.patchQueue=createPatchQueue();this.download=this.patchQueue.download;this.updateIntervalId=null;this.requiresUpdate=!1;this.url=null;this.lastError=0;this.isLaunching=this.isUpcoming=!1;this.allowPartial=!0;this.observers.push(notificationCenter.addInstanceObserver("Task",
"Start",a,function(c,d){b.onStart(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","Complete",this.patchChannel,function(c,d){b.onPatchChannelComplete(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","PatchPending",this.patchChannel,function(c,d){b.onPatchChannelPatchPending(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","UpToDate",this.patchChannel,function(c,d){b.onPatchChannelUpToDate(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel",
"PatchConfigure",this.patchChannel,function(c,d){b.onPatchChannelPatchConfigure(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","StateChange",this.patchChannel,function(c,d){b.onPatchChannelStateChange(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","Start",this.patchQueue,function(c,d){b.onPatchQueueStart(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","StateChange",this.patchQueue,function(c,d){b.onPatchQueueStateChange(a,
d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","ConfigureDownload",this.patchQueue,function(c,d){b.onPatchQueueConfigureDownload(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","DidProcessPatch",this.patchQueue,function(c,d){b.onPatchQueueDidProcessPatch(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","RequiredComplete",this.patchQueue,function(c,d){b.onPatchQueueRequiredComplete(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue",
"Complete",this.patchQueue,function(c,d){b.onPatchQueueComplete(a,d)}))}PatchController.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.updateIntervalId)||(clearInterval(this.updateIntervalId),this.updateIntervalId=null);isNull(this.patchChannel)||(this.patchChannel.release(),this.patchChannel=null);isNull(this.patchQueue)||(this.patchQueue.release(),this.patchQueue=null);this.download=null};
PatchController.prototype.changeState=function(a){var b;if(a!==this.currentState)switch(b=this.currentState,this.currentState=a,notificationCenter.fire("PatchController","StateChange",this,{state:a,previousState:b}),a){case patchControllerState.COMPLETE:this.timeStop=app.getCurrentTime();notificationCenter.fire("PatchController","Complete",this,{successful:!0});break;case patchControllerState.FAIL:this.timeStop=app.getCurrentTime(),notificationCenter.fire("PatchController","Complete",this,{successful:!1})}};
PatchController.prototype.onChannelStart=function(a){var b=this;hasOwnProperty(a.args,"updateInterval")&&0<a.args.updateInterval&&(this.updateIntervalId=setInterval(function(){b.update()},1E3*a.args.updateInterval));hasOwnProperty(a.args,"repair")&&!0===a.args.repair?this.repair():this.update()};
PatchController.prototype.onStart=function(a,b){a.assertArgument("url");this.url=a.args.url;hasOwnProperty(a.args,"allowPartial")&&!1===a.args.allowPartial&&(this.allowPartial=!1);this.uninstall=hasOwnProperty(a.args,"uninstall")&&!0===a.args.uninstall?!0:!1;this.fastVerify=hasOwnProperty(a.args,"fastVerify")&&!0===a.args.fastVerify?!0:!1;hasOwnProperty(a.args,"requiredReleaseId")&&this.patchChannel.setRequiredReleaseId(a.args.requiredReleaseId);hasOwnProperty(a.args,"upcomingReleaseId")&&this.patchChannel.setUpcomingReleaseId(a.args.upcomingReleaseId);
this.onChannelStart(a,b)};PatchController.prototype.onAddPatchesToQueue=function(a,b){var c=this;this.patchQueue.reset();this.patchQueue.add(b.required,b.upcoming);0<this.patchQueue.patchesRequired.length&&!1===this.patchChannel.isUpdatingVersion?a.runSubAction("patchRequired",null,function(a){isNull(a)||!a.hasError()?c.patchQueue.start():c.resume(!1,patcherError.USERABORT)}):c.patchQueue.start()};
PatchController.prototype.onPatchChannelComplete=function(a,b){!0===this.requiresUpdate?this.update():!0===b.successful?(this.currentState!=patchControllerState.FAIL&&this.changeState(patchControllerState.COMPLETE),a.complete()):(this.lastError=this.patchChannel.lastError,this.changeState(patchControllerState.FAIL),this.lastError==patcherError.errorBasePatchManifest+patchManifestError.VERSIONFAIL?a.runSubAction("versionfail",null,function(){a.complete()}):a.complete())};
PatchController.prototype.onPatchChannelPatchPending=function(a,b){var c=this;b.required.forEach(function(a){a.controller=c});b.upcoming.forEach(function(a){a.controller=c});c.onAddPatchesToQueue(a,b)};PatchController.prototype.onPatchChannelUpToDate=function(){this.patchQueue.start()};
PatchController.prototype.onPatchChannelPatchConfigure=function(a,b){var c={};hasOwnProperty(a.args,"config")&&mergeObjectProperties(c,a.args.config,!0);hasOwnProperty(a.args,"config_{0}toX".format(b.patchInfo.fromId))&&mergeObjectProperties(c,a.args["config_{0}toX".format(b.patchInfo.fromId)],!0);hasOwnProperty(a.args,"config_Xto{0}".format(b.patchInfo.toId))&&mergeObjectProperties(c,a.args["config_Xto{0}".format(b.patchInfo.toId)],!0);hasOwnProperty(a.args,"config_{0}to{1}".format(b.patchInfo.fromId,
b.patchInfo.toId))&&mergeObjectProperties(c,a.args["config_{0}to{1}".format(b.patchInfo.fromId,b.patchInfo.toId)],!0);b.patchInfo.config=c;b.patchInfo.allowDownloadEvents=!1;b.patchInfo.title="";hasOwnProperty(a.args,"title")&&(b.patchInfo.title=a.args.title);hasOwnProperty(a.args,"allowDownloadEvents")&&(b.patchInfo.allowDownloadEvents=a.args.allowDownloadEvents)};PatchController.prototype.onPatchChannelStateChange=function(a,b){switch(b.state){case patchChannelState.VERIFY:this.changeState(patchControllerState.VERIFY)}};
PatchController.prototype.onPatchQueueConfigureDownload=function(a,b){this.patchQueue.configureDownload(this.download,b.patchInfo.config,b.patchInfo.allowDownloadEvents)};PatchController.prototype.onPatchQueueStart=function(){this.isUpcoming=!1};PatchController.prototype.onPatchQueueRequiredComplete=function(){this.isUpcoming=!0};
PatchController.prototype.onPatchQueueStateChange=function(a,b){switch(b.state){case patchQueueState.DOWNLOAD:!0===this.isUpcoming?this.changeState(patchControllerState.DOWNLOADUPCOMING):this.changeState(patchControllerState.DOWNLOAD);break;case patchQueueState.MASK:this.changeState(patchControllerState.MASK);break;case patchQueueState.PATCH:this.changeState(patchControllerState.PATCH);break;case patchQueueState.UNINSTALL:this.changeState(patchControllerState.UNINSTALL);break;case patchQueueState.UPDATINGVERSION:this.changeState(patchControllerState.UPDATEVERSION)}};
PatchController.prototype.onPatchQueueDidProcessPatch=function(a,b){!1===b.patchInfo.isUpcoming?this.download.setOptionBoolean("autoDelete",!0):this.download.setOptionBoolean("autoDelete",!1);this.download.stop()};PatchController.prototype.onPatchQueueComplete=function(a,b){this.isUpcoming=!1;this.resume(b.successful,this.patchQueue.getLastError())};PatchController.prototype.isComplete=function(){switch(this.patchChannel.getState()){case patchChannelState.FAIL:case patchChannelState.COMPLETE:return!0}return!1};
PatchController.prototype.isRunning=function(){return this.patchChannel.isRunning||this.patchQueue.isRunning||this.isLaunching};PatchController.prototype.getRunningTime=function(){return 0<this.timeStop?this.timeStop-this.timeStart:app.getCurrentTime()-this.timeStart};PatchController.prototype.getVerifyBytesLeft=function(){return this.patchChannel.versionVerify.getBytesLeft()};PatchController.prototype.getVerifyTotalBytes=function(){return this.patchChannel.versionVerify.getTotalBytes()};
PatchController.prototype.resume=function(a,b){this.patchChannel.resume(a,b)};
PatchController.prototype.update=function(){!0===this.isRunning()?this.requiresUpdate=!0:(this.timeStart=app.getCurrentTime(),this.timeStop=0,this.requiresUpdate=!1,this.lastError=0,this.changeState(patchControllerState.UPDATE),this.patchChannel.setAllowPartial(this.allowPartial),this.patchChannel.setFastVerify(this.fastVerify),this.patchChannel.setUninstall(this.uninstall),this.patchChannel.setUrl(app.expandString(this.url)),this.patchChannel.update())};
PatchController.prototype.repair=function(){this.timeStart=app.getCurrentTime();this.lastError=this.timeStop=0;this.changeState(patchControllerState.REPAIR);this.patchChannel.setAllowPartial(this.allowPartial);this.patchChannel.setFastVerify(this.fastVerify);this.patchChannel.setUninstall(this.uninstall);this.patchChannel.setUrl(app.expandString(this.url));this.patchChannel.repair()};
PatchController.prototype.launch=function(a){var b=this;!0===this.isRunning&&!1===this.isUpcoming?host.assert(!1,"Unable to launch application while patch channel active"):isNull(a.args.launch)||(this.download.stop(),this.changeState(patchControllerState.LAUNCH),this.isLaunching=!0,a.runSubAction("launch",null,function(a,d){d.launchTask=a;b.changeState(patchControllerState.COMPLETE);b.isLaunching=!1;!0===b.isUpcoming&&b.download.start()}))};PatchController.prototype.getDownload=function(){return this.download};
registerTaskController("patch",PatchController);function PatchControllerState(){this.IDLE=0;this.DOWNLOAD=1;this.DOWNLOADUPCOMING=2;this.UNINSTALL=3;this.MASK=4;this.PATCH=5;this.UPDATEVERSION=6;this.UPDATE=7;this.REPAIR=8;this.VERIFY=9;this.FAIL=10;this.COMPLETE=11;this.LAUNCH=12}PatchControllerState.prototype.nameFromId=function(a){return"Idle Downloading DownloadingUpcoming Uninstalling Masking Patching UpdatingVersion Updating Repairing Verifying Fail Complete Launching".split(" ")[a]};
var patchControllerState=new PatchControllerState;function PatcherError(){this.USERABORT=1;this.errorBaseDownload=100;this.errorBasePatchManifest=200;this.errorBasePatch=300;this.errorBaseOS=1E3}PatcherError.prototype.getDownloadError=function(a){return this.errorBaseDownload+a};PatcherError.prototype.getPatchManifestError=function(a){return this.errorBasePatchManifest+a};PatcherError.prototype.getPatchError=function(a){return this.errorBasePatch+a};
PatcherError.prototype.getOSError=function(a){return this.errorBaseOS+a};
PatcherError.prototype.errorStringFromId=function(a){return a>=this.errorBaseOS?"OSError_"+osError.nameFromId(a-this.errorBaseOS):a>=this.errorBasePatch?"PatchError_"+patchError.nameFromId(a-this.errorBasePatch):a>=this.errorBasePatchManifest?"PatchManifestError_"+patchManifestError.nameFromId(a-this.errorBasePatchManifest):a>=this.errorBaseDownload?"DownloadError_"+downloadError.nameFromId(a-this.errorBaseDownload):a===patcherError.USERABORT?"PatcherError_UserAbort":"PatcherError_Unknown"};
var patcherError=new PatcherError;function PatchError(){this.UNKNOWN=0;this.CORRUPTSOURCE=1;this.CORRUPTDEST=2;this.UNZIPFAIL=3}PatchError.prototype.nameFromId=function(a){return["Unknown","CorruptSource","CorruptDest","UnzipFail"][a]};var patchError=new PatchError;function PatchErrorType(){this.UNKNOWN=0;this.PATCH=1;this.OSERROR=2}PatchErrorType.prototype.nameFromId=function(a){return["Unknown","PatchError","OSError"][a]};var patchErrorType=new PatchErrorType;
function PatchExistsController(a){var b=this;this.observers=[];this.removeManifest=!1;this.patchChannel=createPatchChannel();this.observers.push(notificationCenter.addInstanceObserver("Task","Start",a,function(c,d){b.onStart(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","UpToDate",this.patchChannel,function(c,d){b.onPatchUpToDate(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","PatchPending",this.patchChannel,function(c,d){b.onPatchPending(a,
d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchChannel","Complete",this.patchChannel,function(c,d){b.onPatchComplete(a,d)}))}PatchExistsController.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.patchChannel)||(this.patchChannel.release(),this.patchChannel=null)};PatchExistsController.prototype.cleanLocalManifest=function(){!isNull(this.patchChannel)&&!0===this.removeManifest&&(this.removeManifest=!1,this.patchChannel.cleanLocalManifest())};
PatchExistsController.prototype.onPatchComplete=function(a,b){this.cleanLocalManifest();!1===b.successful&&(a.error(patcherError.errorStringFromId(this.patchChannel.getLastError())),this.patchChannel.getLastError()==patcherError.errorBasePatchManifest+patchManifestError.VERSIONFAIL?a.runSubAction("versionfail",null,function(){a.complete()}):a.complete())};PatchExistsController.prototype.onPatchUpToDate=function(a){this.cleanLocalManifest();a.runSubAction("uptodate",null,function(){a.complete()})};
PatchExistsController.prototype.onPatchPending=function(a,b){this.cleanLocalManifest();0<b.required.length?0>b.required[0].fromId?a.runSubAction("missing",null,function(){a.complete()}):a.runSubAction("required",null,function(){a.complete()}):0<b.upcoming.length&&a.runSubAction("upcoming",null,function(){a.complete()})};
PatchExistsController.prototype.onStart=function(a){a.assertArgument("url");this.patchChannel.setUrl(app.expandString(a.args.url));this.removeManifest=!1===platform.fileExists(this.patchChannel.manifest.getFilename());this.patchChannel.update()};registerTaskController("checkPatchExists",PatchExistsController);
function PatchGroupController(a,b){var c=this;this.instanceId=app.expandString("{Guid}");this.observers=[];this.queueController=new QueueController(a,b);this.patchQueue=createPatchQueue();this.download=this.patchQueue.download;this.subControllers=[];this.activeSubControllers=[];this.patchesRequired={};this.patchesUpcoming={};this.currentState=patchControllerState.IDLE;this.requiresUpdate=!1;this.updateIntervalId=null;this.failed=this.isLaunching=this.isUpcoming=this.isRepairing=!1;this.timeStop=this.timeStart=
this.lastError=0;this.queueController.onQueueComplete=function(a){!1===a.hasError()&&(hasOwnProperty(a.args,"updateInterval")&&0<a.args.updateInterval&&(c.updateIntervalId=setInterval(function(){c.update()},1E3*a.args.updateInterval)),hasOwnProperty(a.args,"repair")&&!0===a.args.repair?c.repair():c.update())};this.observers.push(notificationCenter.addInstanceObserver("Task","SubTaskCreate",a,function(b,e){c.onSubTaskCreate(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue",
"Start",this.patchQueue,function(b,e){c.onPatchQueueStart(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","StateChange",this.patchQueue,function(b,e){c.onPatchQueueStateChange(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","ConfigureDownload",this.patchQueue,function(b,e){c.onPatchQueueConfigureDownload(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","DidProcessPatch",this.patchQueue,function(b,e){c.onPatchQueueDidProcessPatch(a,
e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","RequiredComplete",this.patchQueue,function(b,e){c.onPatchQueueRequiredComplete(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","Complete",this.patchQueue,function(b,e){c.onPatchQueueComplete(a,e)}))}
PatchGroupController.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.queueController)||(this.queueController.release(),this.queueController=null);isNull(this.updateIntervalId)||(clearInterval(this.updateIntervalId),this.updateIntervalId=null);isNull(this.patchQueue)||(this.patchQueue.release(),this.patchQueue=null);this.subControllers=[];this.download=null};
PatchGroupController.prototype.removeActiveController=function(a,b){this.activeSubControllers.removeElement(a);0===this.activeSubControllers.length&&b()};
PatchGroupController.prototype.onSubTaskCreate=function(a,b){var c=this,d=b.subTask;if("patch"===d.args.type.toLowerCase()){var e=function(){!0===c.isComplete()?(!0===c.failed?c.changeState(patchControllerState.FAIL):c.changeState(patchControllerState.COMPLETE),a.complete()):(c.patchQueue.reset(),c.subControllers.forEach(function(a){c.patchQueue.add(c.patchesRequired[a.instanceId],c.patchesUpcoming[a.instanceId])}),0<c.patchQueue.patchesRequired.length&&!1===d.controller.patchChannel.isUpdatingVersion?
a.runSubAction("patchRequired",null,function(a){isNull(a)||!a.hasError()?c.patchQueue.start():c.resume(!1,patcherError.USERABORT)}):c.patchQueue.start())},f=d.controller.release;d.controller.release=function(){c.subControllers.removeElement(d.controller);f.call(d.controller)};d.controller.onChannelStart=function(){d.controller.download=c.download;d.complete()};d.controller.onAddPatchesToQueue=function(a,b){c.patchesRequired[d.controller.instanceId]=b.required;c.patchesUpcoming[d.controller.instanceId]=
b.upcoming;c.removeActiveController(d.controller,e)};d.controller.onPatchChannelUpToDate=function(){c.patchesRequired[d.controller.instanceId]=[];c.patchesUpcoming[d.controller.instanceId]=[];c.removeActiveController(d.controller,e)};d.controller.onPatchChannelStateChange=function(a,b){switch(b.state){case patchChannelState.VERIFY:c.changeState(patchControllerState.VERIFY)}};d.controller.onPatchChannelComplete=function(a,b){switch(c.currentState){case patchControllerState.COMPLETE:case patchControllerState.FAIL:break;
default:!1===b.successful&&(c.failed=!0,c.lastError=this.patchChannel.lastError)}c.removeActiveController(d.controller,e)};this.subControllers.push(d.controller)}};PatchGroupController.prototype.onPatchQueueStart=function(){this.isUpcoming=!1};PatchGroupController.prototype.onPatchQueueRequiredComplete=function(){this.isUpcoming=!0};
PatchGroupController.prototype.onPatchQueueStateChange=function(a,b){switch(b.state){case patchQueueState.DOWNLOAD:!0===this.isUpcoming?this.changeState(patchControllerState.DOWNLOADUPCOMING):this.changeState(patchControllerState.DOWNLOAD);break;case patchQueueState.MASK:this.changeState(patchControllerState.MASK);break;case patchQueueState.PATCH:this.changeState(patchControllerState.PATCH);break;case patchQueueState.UNINSTALL:this.changeState(patchControllerState.UNINSTALL);break;case patchQueueState.UPDATINGVERSION:this.changeState(patchControllerState.UPDATEVERSION)}};
PatchGroupController.prototype.onPatchQueueConfigureDownload=function(a,b){this.patchQueue.configureDownload(this.download,b.patchInfo.config,b.patchInfo.allowDownloadEvents)};PatchGroupController.prototype.onPatchQueueDidProcessPatch=function(a,b){!1===b.patchInfo.isUpcoming?this.download.setOptionBoolean("autoDelete",!0):this.download.setOptionBoolean("autoDelete",!1);this.download.stop()};
PatchGroupController.prototype.onPatchQueueComplete=function(a,b){this.patchesRequired={};this.patchesUpcoming={};this.isUpcoming=!1;this.resume(b.successful,this.patchQueue.getLastError())};PatchGroupController.prototype.getVerifyBytesLeft=function(){var a=0;this.subControllers.forEach(function(b){a+=b.getVerifyBytesLeft()});return a};
PatchGroupController.prototype.getVerifyTotalBytes=function(){var a=0,b=!1;this.subControllers.forEach(function(c){var d=0,d=c.getVerifyTotalBytes();0==d&&(b=!0);a+=d});return!0==b?0:a};
PatchGroupController.prototype.changeState=function(a){var b;if(a!==this.currentState)switch(b=this.currentState,this.currentState=a,notificationCenter.fire("PatchController","StateChange",this,{state:a,previousState:b}),a){case patchControllerState.COMPLETE:this.timeStop=app.getCurrentTime();notificationCenter.fire("PatchController","Complete",this,{successful:!0});!0===this.requiresUpdate&&this.update();break;case patchControllerState.FAIL:this.timeStop=app.getCurrentTime(),notificationCenter.fire("PatchController",
"Complete",this,{successful:!1})}};PatchGroupController.prototype.resume=function(a,b){var c=this;host.assert(0===this.activeSubControllers.length,"Trying to reset subcontrollers while some are still active (resume)");this.subControllers.forEach(function(a){!1===a.isComplete()&&c.activeSubControllers.push(a)});this.subControllers.forEach(function(c){!1===c.isComplete()&&c.resume(a,b)})};
PatchGroupController.prototype.update=function(){if(!0===this.isRunning())this.requiresUpdate=!0;else{var a=this;this.patchQueue.reset();this.patchesRequired={};this.patchesUpcoming={};this.timeStart=app.getCurrentTime();this.timeStop=0;this.requiresUpdate=this.isRepairing=!1;this.lastError=0;this.failed=!1;this.changeState(patchControllerState.UPDATE);host.assert(0===this.activeSubControllers.length,"Trying to reset subcontrollers while some are still active (update)");this.subControllers.forEach(function(b){a.activeSubControllers.push(b)});
this.subControllers.forEach(function(a){a.update()})}};
PatchGroupController.prototype.repair=function(){if(!0===this.isRunning())host.assert(!1,"Trying to repair patch group that is still active");else{var a=this;this.patchQueue.reset();this.timeStart=app.getCurrentTime();this.timeStop=0;this.isRepairing=!0;this.lastError=0;this.failed=!1;this.changeState(patchControllerState.REPAIR);host.assert(0===this.activeSubControllers.length,"Trying to reset subcontrollers while some are still active (repair)");this.subControllers.forEach(function(b){a.activeSubControllers.push(b)});
this.subControllers.forEach(function(a){a.repair()})}};PatchGroupController.prototype.launch=function(a){var b=this;!0===this.isRunning()&&!1===this.isUpcoming?host.assert(!1,"Unable to launch application while patch group active"):isNull(a.args.launch)||(this.download.stop(),this.changeState(patchControllerState.LAUNCH),this.isLaunching=!0,a.runSubAction("launch",null,function(a,d){d.launchTask=a;b.changeState(patchControllerState.COMPLETE);b.isLaunching=!1;!0===b.isUpcoming&&b.download.start()}))};
PatchGroupController.prototype.getRunningTime=function(){return 0<this.timeStop?this.timeStop-this.timeStart:app.getCurrentTime()-this.timeStart};PatchGroupController.prototype.isComplete=function(){var a=!0;!0===a&&this.subControllers.forEach(function(b){!1===b.isComplete()&&(a=!1)});return a};PatchGroupController.prototype.isRunning=function(){var a=this.isLaunching;!1===a&&(a=0!==this.activeSubControllers.length);!1===a&&this.subControllers.forEach(function(b){!0===b.isRunning()&&(a=!0)});return a};
PatchGroupController.prototype.getDownload=function(){return this.download};registerTaskController("patchgroup",PatchGroupController);function PatchManifest(a){this.instanceId=a}PatchManifest.prototype.release=function(){interop.releaseInstance(this.instanceId)};PatchManifest.prototype.getFilename=function(){return interop.invoke(this.instanceId,{method:"getFilename"})};PatchManifest.prototype.setFilename=function(a){return interop.invoke(this.instanceId,{method:"setFilename",value:a})};
PatchManifest.prototype.getLastError=function(){return interop.invoke(this.instanceId,{method:"getLastError"})};PatchManifest.prototype.getTargetDirectory=function(){return interop.invoke(this.instanceId,{method:"getTargetDirectory"})};PatchManifest.prototype.setTargetDirectory=function(a){return interop.invoke(this.instanceId,{method:"setTargetDirectory",value:a})};PatchManifest.prototype.getMaintenance=function(){return interop.invoke(this.instanceId,{method:"getMaintenance"})};
PatchManifest.prototype.getRequiresElevation=function(){return interop.invoke(this.instanceId,{method:"getRequiresElevation"})};PatchManifest.prototype.getName=function(){return interop.invoke(this.instanceId,{method:"getName"})};PatchManifest.prototype.getSourceReleaseSHA1=function(){return interop.invoke(this.instanceId,{method:"getSourceReleaseSHA1"})};PatchManifest.prototype.setSourceReleaseSHA1=function(a){return interop.invoke(this.instanceId,{method:"setSourceReleaseSHA1",value:a})};
PatchManifest.prototype.getSourceReleaseId=function(){return interop.invoke(this.instanceId,{method:"getSourceReleaseId"})};PatchManifest.prototype.setSourceReleaseId=function(a){return interop.invoke(this.instanceId,{method:"setSourceReleaseId",value:a})};PatchManifest.prototype.getSourceReleaseName=function(){return interop.invoke(this.instanceId,{method:"getSourceReleaseName"})};
PatchManifest.prototype.setSourceReleaseName=function(a){return interop.invoke(this.instanceId,{method:"setSourceReleaseName",value:a})};PatchManifest.prototype.getTargetReleaseSHA1=function(){return interop.invoke(this.instanceId,{method:"getTargetReleaseSHA1"})};PatchManifest.prototype.setTargetReleaseSHA1=function(a){return interop.invoke(this.instanceId,{method:"setTargetReleaseSHA1",value:a})};PatchManifest.prototype.getTargetReleaseId=function(){return interop.invoke(this.instanceId,{method:"getTargetReleaseId"})};
PatchManifest.prototype.setTargetReleaseId=function(a){return interop.invoke(this.instanceId,{method:"setTargetReleaseId",value:a})};PatchManifest.prototype.getTargetReleaseName=function(){return interop.invoke(this.instanceId,{method:"getTargetReleaseName"})};PatchManifest.prototype.setTargetReleaseName=function(a){return interop.invoke(this.instanceId,{method:"setTargetReleaseName",value:a})};PatchManifest.prototype.getRequiredReleaseId=function(){return interop.invoke(this.instanceId,{method:"getRequiredReleaseId"})};
PatchManifest.prototype.setRequiredReleaseId=function(a){return interop.invoke(this.instanceId,{method:"setRequiredReleaseId",value:a})};PatchManifest.prototype.getUpcomingReleaseId=function(){return interop.invoke(this.instanceId,{method:"getUpcomingReleaseId"})};PatchManifest.prototype.setUpcomingReleaseId=function(a){return interop.invoke(this.instanceId,{method:"setUpcomingReleaseId",value:a})};PatchManifest.prototype.getCurrentReleaseId=function(){return interop.invoke(this.instanceId,{method:"getCurrentReleaseId"})};
PatchManifest.prototype.clean=function(a,b){return interop.invoke(this.instanceId,{method:"clean",cleanManifest:a,cleanPatches:b})};PatchManifest.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};PatchManifest.prototype.expandString=function(a){return interop.invoke(this.instanceId,{method:"expandString",expand:a})};PatchManifest.prototype.getReleaseName=function(a){return interop.invoke(this.instanceId,{method:"getReleaseName",id:a})};
PatchManifest.prototype.getExtraDataValue=function(a,b,c){return interop.invoke(this.instanceId,{method:"getExtraDataValue",fromId:a,toId:b,key:c})};function createPatchManifest(){return interop.createInstance("SSN.PatchManifest",PatchManifest)}
function PatchManifestError(){this.NONE=0;this.INVALIDARGUMENT=1;this.SOURCERELEASEUNDEFINED=2;this.TARGETRELEASEUNDEFINED=3;this.UPDATEPATHUNAVAILABLE=4;this.MAINTENANCE=5;this.UNZIPFAIL=6;this.XMLPARSEFAIL=7;this.REQUIRESELEVATION=8;this.VERSIONFAIL=9;this.DOWNLOADFAIL=10;this.MISSINGMETAFILE=11}PatchManifestError.prototype.nameFromId=function(a){return"None InvalidArgument SourceReleaseUndefined TargetReleaseUndefined UpdatePathUnavailable Maintenance UnzipFailed XmlParseFail RequiresElevation VersionFail DownloadFail MissingMetafile".split(" ")[a]};
var patchManifestError=new PatchManifestError;function PatchManifestState(){this.GETMANIFEST=0;this.DEPENDENCY=1;this.DOWNLOAD=2;this.PATCH=3;this.COMPLETE=4}PatchManifestState.prototype.nameFromId=function(a){return["GetManifest","Dependency","Downloading","Patching","Complete"][a]};var patchManifestState=new PatchManifestState;
function PatchQueue(){this.instanceId=app.expandString("{Guid}");this.currentState=-1;this.requiredComplete=this.isPartial=this.isRunning=!1;this.download=createDownload();this.versionUninstall=createPatchVersionUninstall();this.versionUpdate=createPatchVersionUpdate();this.patch=createPatch();this.patchesRequired=[];this.patchesUpcoming=[];this.observers=[];this.cancel=!1;this.resumeTimeoutId=this.maskIntervalId=this.currentPatchInfo=null;this.failureCount=this.timeStop=this.timeStart=0;var a=this;
this.observers.push(notificationCenter.addInstanceObserver("Download","ConfigComplete",this.download,function(b,c){a.onPatchDownloadConfigComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("Download","Complete",this.download,function(b,c){a.onPatchDownloadComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUninstall","Start",this.versionUninstall,function(b,c){a.onVersionUninstallStart(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUninstall",
"StateChange",this.versionUninstall,function(b,c){a.onVersionUninstallStateChange(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUninstall","Complete",this.versionUninstall,function(b,c){a.onVersionUninstallComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUpdate","StateChange",this.versionUpdate,function(b,c){a.onVersionUpdateStateChange(c)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUpdate","Complete",
this.versionUpdate,function(b,c){a.onVersionUpdateComplete(c)}));this.observers.push(notificationCenter.addInstanceObserver("Patch","Start",this.patch,function(b,c){a.onPatchStart(c)}));this.observers.push(notificationCenter.addInstanceObserver("Patch","StateChange",this.patch,function(b,c){a.onPatchStateChange(c)}));this.observers.push(notificationCenter.addInstanceObserver("Patch","Complete",this.patch,function(b,c){a.onPatchComplete(c)}))}
PatchQueue.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.resumeTimeoutId)||(clearTimeout(this.resumeTimeoutId),this.resumeTimeoutId=null);isNull(this.maskIntervalId)||(clearInterval(this.maskIntervalId),this.maskIntervalId=null);isNull(this.download)||(this.download.stop(),this.download.release(),this.download=null);isNull(this.versionUninstall)||(this.versionUninstall.release(),this.versionUninstall=null);isNull(this.versionUpdate)||(this.versionUpdate.release(),
this.versionUpdate=null);isNull(this.patch)||(this.patch.release(),this.patch=null)};
PatchQueue.prototype.changeState=function(a){var b;if(a!==this.currentState)switch(b=this.currentState,this.currentState=a,notificationCenter.fire("PatchQueue","StateChange",this,{state:a,previousState:b}),a){case patchQueueState.COMPLETE:this.timeStop=app.getCurrentTime();this.isPartial=this.isRunning=!1;notificationCenter.fire("PatchQueue","Complete",this,{successful:!0});break;case patchQueueState.FAIL:this.timeStop=app.getCurrentTime(),this.isPartial=this.isRunning=!1,notificationCenter.fire("PatchQueue",
"Complete",this,{successful:!1})}};PatchQueue.prototype.resumeAfterDelay=function(a){var b=this;host.assert(null===this.resumeTimeoutId,"Resume timeout already active");this.resumeTimeoutId=setTimeout(function(){b.resumeTimeoutId=null;a.resume()},1E3)};PatchQueue.prototype.resumePatchAfterDelay=function(){this.resumeAfterDelay(this.patch)};PatchQueue.prototype.resumeUninstallAfterDelay=function(){this.resumeAfterDelay(this.versionUninstall)};PatchQueue.prototype.resumeUpdateAfterDelay=function(){this.resumeAfterDelay(this.versionUpdate)};
PatchQueue.prototype.onMaskDownload=function(a,b){var c=this,d,e,f;f=0;this.maskIntervalId=whileInterval(function(){d=a[f];e={diskname:"",diskoffset:0,disksize:0};!0===c.patch.getItemDiskInfo(d,e)&&(e.diskname=e.diskname.substring(c.download.getOptionString("OutputPath").length),c.download.maskFileRange(e.diskname,e.diskoffset,e.disksize));f+=1;return f>=a.length?(b(),c.maskIntervalId=null,!1):!0},10,1)};
PatchQueue.prototype.onPatchDownloadConfigComplete=function(){var a=this,b=this.patch.getFileName().substring(this.download.getOptionString("OutputPath").length);this.patch.resetDiskInfo();this.patch.maskReset();0<this.currentPatchInfo.maskedFiles.length?(this.currentPatchInfo.maskedFiles.forEach(function(b){a.patch.maskAdd(b)}),this.download.setMaskEnabled(!0),this.download.maskFile(b),this.download.syncToMask(),this.changeState(patchQueueState.DOWNLOAD)):this.download.setMaskEnabled(!1);this.download.setActive(!0)};
PatchQueue.prototype.onPatchMaskComplete=function(){if(!0===this.currentPatchInfo.uninstall&&!0===platform.fileExists(this.currentPatchInfo.versionFilename))this.changeState(patchQueueState.UNINSTALL),this.versionUninstall.setFileName(this.currentPatchInfo.versionFilename),this.versionUninstall.start();else if(!1===this.currentPatchInfo.isUpcoming)this.failureCount=0,this.patch.start();else this.onPatchComplete({successful:!0})};
PatchQueue.prototype.onPatchDownloadComplete=function(a){var b=this;if(!0===a.successful)if(0<b.currentPatchInfo.maskedFiles.length)this.changeState(patchQueueState.MASK),this.onMaskDownload(b.currentPatchInfo.maskedFiles,function(){b.currentPatchInfo.maskedFiles=[];b.download.syncToMask();b.changeState(patchQueueState.DOWNLOAD)});else if(!0===this.currentPatchInfo.versionUpdate)this.changeState(patchQueueState.UPDATINGVERSION),this.versionUpdate.setFileName(this.currentPatchInfo.filename),this.versionUpdate.setVersionPath(this.currentPatchInfo.versionFilename),
this.versionUpdate.setVersionName(this.currentPatchInfo.versionName),this.versionUpdate.start();else this.onPatchMaskComplete(a);else this.lastError=patcherError.getDownloadError(this.download.getLastError()),this.changeState(patchQueueState.FAIL)};
PatchQueue.prototype.onPatchFailure=function(){switch(this.patch.getLastErrorType()){case patchErrorType.PATCH:this.lastError=patcherError.getPatchError(this.patch.getLastError());break;case patchErrorType.OSERROR:this.lastError=patcherError.getOSError(this.patch.getLastError());break;default:this.lastError=patcherError.getPatchError(0),host.assert(!1,"Unknown patch error type ({0})".format(this.patch.getLastErrorType()))}};
PatchQueue.prototype.onPatchStart=function(){!1===this.currentPatchInfo.allowPartial&&(this.isPartial=!0)};PatchQueue.prototype.onPatchStateChange=function(a){var b=this;switch(a.state){case patchState.STALLED:this.changeState(patchQueueState.STALLED);3>this.patch.getFileAttempt()?this.resumePatchAfterDelay():(this.failureCount+=1,setTimeout(function(){isNull(b.patch)||(10<b.failureCount?b.patch.fail():b.patch.skip())},1));break;case patchState.COMPLETE:case patchState.FAILED:break;default:this.changeState(patchQueueState.PATCH)}};
PatchQueue.prototype.onPatchComplete=function(a){!1===this.currentPatchInfo.allowPartial&&(this.isPartial=!1);if(!0===a.successful)if(notificationCenter.fire("PatchQueue","DidProcessPatch",this,{patchInfo:this.currentPatchInfo}),!1===this.currentPatchInfo.isUpcoming&&!0===this.patch.getSelfUpdate())app.setRestart(!0);else this.onProcessPatches();else this.onPatchFailure(),this.changeState(patchQueueState.FAIL)};
PatchQueue.prototype.onUninstallFailure=function(){this.lastError=patcherError.getOSError(this.versionUninstall.getLastFileError());this.versionUninstall.fail()};PatchQueue.prototype.onVersionUninstallStart=function(){!1===this.currentPatchInfo.allowPartial&&(this.isPartial=!0)};
PatchQueue.prototype.onVersionUninstallStateChange=function(a){switch(a.state){case patchVersionUninstallState.STALLED:this.changeState(patchQueueState.UNINSTALLSTALLED);if(3>this.versionUninstall.getFileAttempt())this.resumeUninstallAfterDelay();else this.onUninstallFailure();break;case patchVersionUninstallState.COMPLETE:case patchVersionUninstallState.FAILED:break;default:this.changeState(patchQueueState.UNINSTALL)}};
PatchQueue.prototype.onVersionUninstallComplete=function(a){if(!0===a.successful)this.onPatchMaskComplete(a);else 0===this.lastError&&(this.lastError=patcherError.getOSError(this.versionUninstall.getLastFileError())),this.changeState(patchQueueState.FAIL)};PatchQueue.prototype.onUpdateFailure=function(){this.lastError=patcherError.getOSError(this.versionUpdate.getLastFileError());this.versionUpdate.fail()};
PatchQueue.prototype.onVersionUpdateStateChange=function(a){switch(a.state){case patchVersionUpdateState.STALLED:this.changeState(patchQueueState.UPDATEVERSIONSTALLED);if(3>this.versionUpdate.getFileAttempt())this.resumeUpdateAfterDelay();else this.onUpdateFailure();break;case patchVersionUpdateState.COMPLETE:case patchVersionUpdateState.FAILED:break;default:this.changeState(patchQueueState.UPDATINGVERSION)}};
PatchQueue.prototype.onVersionUpdateComplete=function(a){if(!0===a.successful)this.onProcessPatches();else 0===this.lastError&&(this.lastError=patcherError.getOSError(this.versionUpdate.getLastFileError())),this.changeState(patchQueueState.FAIL)};
PatchQueue.prototype.onProcessPatches=function(){if(!0!==this.cancel)if(0===this.patchesRequired.length&&!1==this.requiredComplete&&(this.requiredComplete=!0,notificationCenter.fire("PatchQueue","RequiredComplete",this,{})),0<this.patchesRequired.length?notificationCenter.fire("PatchQueue","WillProcessPatch",this,{patchInfo:this.patchesRequired[0]}):0<this.patchesUpcoming.length&&notificationCenter.fire("PatchQueue","WillProcessPatch",this,{patchInfo:this.patchesUpcoming[0]}),this.currentPatchInfo=
0<this.patchesRequired.length?this.patchesRequired.shift():0<this.patchesUpcoming.length?this.patchesUpcoming.shift():null,isNull(this.currentPatchInfo))this.changeState(patchQueueState.COMPLETE);else this.onProcessPatch(this.currentPatchInfo)};
PatchQueue.prototype.onProcessPatch=function(a){this.patch.setFileName(a.filename);this.patch.setOutputDirectory(a.outputDirectory);this.changeState(patchQueueState.DOWNLOAD);this.download.stop();this.download.setMaskEnabled(!1);app.debugPrint("Patching {0}\n".format(a.name));notificationCenter.fire("PatchQueue","ConfigureDownload",this,{patchInfo:a});0<a.maskedFiles.length&&this.download.setMaskEnabled(!0);this.download.setMetafileSource(a.metafileUrl);this.download.setOptionString("OutputPath",
a.patchDirectory);this.download.start()};PatchQueue.prototype.getRequiredCount=function(){return this.patchesRequired.length};PatchQueue.prototype.getState=function(){return this.currentState};PatchQueue.prototype.getLastError=function(){return this.lastError};
PatchQueue.prototype.configureDownload=function(a,b,c){a.resetOptions();for(name in b)if(hasOwnProperty(b,name))switch(value=b[name],getObjectType(value)){case "string":a.setOptionString(name,app.expandString(value));break;case "number":a.setOptionInt32(name,value);break;case "boolean":a.setOptionBoolean(name,value);break;default:host.app.debugPrint("Unable to set property {0} on download (unknown type)\n".format(name))}!isNull(c)&&"function"===getObjectType(c.forEach)&&c.forEach(function(b){a.allowEvent(b)})};
PatchQueue.prototype.start=function(){!0===this.isRunning?host.assert(!1,"Unable to update patch channel while already running"):(this.currentState=-1,this.lastError=0,this.requiredComplete=!1,this.isRunning=!0,this.cancel=!1,notificationCenter.fire("PatchQueue","Start",this,{}),this.onProcessPatches())};PatchQueue.prototype.reset=function(){this.patchesRequired=[];this.patchesUpcoming=[]};
PatchQueue.prototype.add=function(a,b){!isNull(a)&&0<a.length&&(this.patchesRequired=this.patchesRequired.concat(a));!isNull(b)&&0<b.length&&(this.patchesUpcoming=this.patchesUpcoming.concat(b))};PatchQueue.prototype.getRunningTime=function(){return 0<this.timeStop?this.timeStop-this.timeStart:app.getCurrentTime()-this.timeStart};function createPatchQueue(){return new PatchQueue}
function PatchQueueState(){this.UNINSTALL=0;this.UNINSTALLSTALLED=1;this.UPDATINGVERSION=2;this.UPDATEVERSIONSTALLED=3;this.MASK=4;this.DOWNLOAD=5;this.PATCH=6;this.STALLED=7;this.COMPLETE=8;this.FAIL=9}PatchQueueState.prototype.nameFromId=function(a){return"Uninstalling UninstallStalled UpdatingVersion UpdatingVersionStalled Masking Downloading Patching Stalled Complete Fail".split(" ")[a]};var patchQueueState=new PatchQueueState;
function PatchState(){this.IDLE=0;this.AUTHENTICATING=1;this.PATCHING=2;this.STALLED=3;this.COMPLETE=4;this.FAILED=5}PatchState.prototype.nameFromId=function(a){return"Idle Authenticating Patching Stalled Complete Failed".split(" ")[a]};var patchState=new PatchState;
function PatchUninstallController(a){var b=this;this.observers=[];this.resumeTimeoutId=null;this.versionUninstall=createPatchVersionUninstall();this.observers.push(notificationCenter.addInstanceObserver("Task","Start",a,function(c,d){b.onStart(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUninstall","StateChange",this.versionUninstall,function(c,d){b.onVersionUninstallStateChange(a,d)}));this.observers.push(notificationCenter.addInstanceObserver("PatchVersionUninstall",
"Complete",this.versionUninstall,function(c,d){b.onVersionUninstallComplete(a,d)}))}PatchUninstallController.prototype.release=function(){this.observers.forEach(function(a){a.release()});this.observers=[];isNull(this.resumeTimeoutId)||(clearTimeout(this.resumeTimeoutId),this.resumeTimeoutId=null);isNull(this.versionUninstall)||(this.versionUninstall.release(),versionUninstall=null)};
PatchUninstallController.prototype.onUninstallFailure=function(a){a.error("OSError_"+osError.nameFromId(this.versionUninstall.getLastFileError()));this.versionUninstall.fail()};PatchUninstallController.prototype.resumeUninstallAfterDelay=function(){var a=this;host.assert(null==this.resumeTimeoutId,"Resume timeout already active");this.resumeTimeoutId=setTimeout(function(){a.resumeTimeoutId=null;a.versionUninstall.resume()},1E4)};
PatchUninstallController.prototype.onVersionUninstallStateChange=function(a,b){switch(b.state){case patchVersionUninstallState.STALLED:if(3>this.versionUninstall.getFileAttempt())this.resumeUninstallAfterDelay(a,b);else this.onUninstallFailure(a,b)}};PatchUninstallController.prototype.onVersionUninstallComplete=function(a,b){!1===b.successful&&a.error("PatchUninstall_Fail");a.complete()};
PatchUninstallController.prototype.onStart=function(a){a.assertArgument("filename");this.versionUninstall.setFileName(app.expandString(a.args.filename));this.versionUninstall.start()};registerTaskController("patchUninstall",PatchUninstallController);function PatchVersion(a){this.instanceId=a}PatchVersion.prototype.release=function(){interop.releaseInstance(this.instanceId)};PatchVersion.prototype.getFileName=function(){return interop.invoke(this.instanceId,{method:"getFileName"})};
PatchVersion.prototype.setFileName=function(a){return interop.invoke(this.instanceId,{method:"setFileName",value:a})};PatchVersion.prototype.getSha1=function(){return interop.invoke(this.instanceId,{method:"getSha1"})};PatchVersion.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};PatchVersion.prototype.resume=function(){return interop.invoke(this.instanceId,{method:"resume"})};
function createPatchVersion(){return interop.createInstance("SSN.PatchVersion",PatchVersion)}function PatchVersionUninstall(a){this.instanceId=a}PatchVersionUninstall.prototype.release=function(){interop.releaseInstance(this.instanceId)};PatchVersionUninstall.prototype.getFileName=function(){return interop.invoke(this.instanceId,{method:"getFileName"})};PatchVersionUninstall.prototype.setFileName=function(a){return interop.invoke(this.instanceId,{method:"setFileName",value:a})};
PatchVersionUninstall.prototype.getShortFileName=function(){return interop.invoke(this.instanceId,{method:"getShortFileName"})};PatchVersionUninstall.prototype.getRunningTime=function(){return interop.invoke(this.instanceId,{method:"getRunningTime"})};PatchVersionUninstall.prototype.getCurrentItemName=function(){return interop.invoke(this.instanceId,{method:"getCurrentItemName"})};PatchVersionUninstall.prototype.getMaskExists=function(){return interop.invoke(this.instanceId,{method:"getMaskExists"})};
PatchVersionUninstall.prototype.getTotalBytes=function(){return interop.invoke(this.instanceId,{method:"getTotalBytes"})};PatchVersionUninstall.prototype.getBytesLeft=function(){return interop.invoke(this.instanceId,{method:"getBytesLeft"})};PatchVersionUninstall.prototype.getLastFileError=function(){return interop.invoke(this.instanceId,{method:"getLastFileError"})};PatchVersionUninstall.prototype.getFileAttempt=function(){return interop.invoke(this.instanceId,{method:"getFileAttempt"})};
PatchVersionUninstall.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};PatchVersionUninstall.prototype.resume=function(){return interop.invoke(this.instanceId,{method:"resume"})};PatchVersionUninstall.prototype.fail=function(){return interop.invoke(this.instanceId,{method:"fail"})};PatchVersionUninstall.prototype.maskReset=function(){return interop.invoke(this.instanceId,{method:"maskReset"})};
PatchVersionUninstall.prototype.maskAdd=function(a){return interop.invoke(this.instanceId,{method:"maskAdd",filename:a})};function createPatchVersionUninstall(){return interop.createInstance("SSN.PatchVersionUninstall",PatchVersionUninstall)}function PatchVersionUninstallState(){this.IDLE=0;this.CALCULATESZE=1;this.UNINSTALL=2;this.STALLED=3;this.COMPLETE=4;this.FAILED=5}PatchVersionUninstallState.prototype.nameFromId=function(a){return"Idle CalculatingSize Uninstalling Stalled Complete Failed".split(" ")[a]};
var patchVersionUninstallState=new PatchVersionUninstallState;function PatchVersionUpdate(a){this.instanceId=a}PatchVersionUpdate.prototype.release=function(){interop.releaseInstance(this.instanceId)};PatchVersionUpdate.prototype.getFileName=function(){return interop.invoke(this.instanceId,{method:"getFileName"})};PatchVersionUpdate.prototype.setFileName=function(a){return interop.invoke(this.instanceId,{method:"setFileName",value:a})};
PatchVersionUpdate.prototype.getVersionName=function(){return interop.invoke(this.instanceId,{method:"getVersionName"})};PatchVersionUpdate.prototype.setVersionName=function(a){return interop.invoke(this.instanceId,{method:"setVersionName",value:a})};PatchVersionUpdate.prototype.getVersionPath=function(){return interop.invoke(this.instanceId,{method:"getVersionPath"})};PatchVersionUpdate.prototype.setVersionPath=function(a){return interop.invoke(this.instanceId,{method:"setVersionPath",value:a})};
PatchVersionUpdate.prototype.getShortFileName=function(){return interop.invoke(this.instanceId,{method:"getShortFileName"})};PatchVersionUpdate.prototype.getRunningTime=function(){return interop.invoke(this.instanceId,{method:"getRunningTime"})};PatchVersionUpdate.prototype.getCurrentItemName=function(){return interop.invoke(this.instanceId,{method:"getCurrentItemName"})};PatchVersionUpdate.prototype.getTotalBytes=function(){return interop.invoke(this.instanceId,{method:"getTotalBytes"})};
PatchVersionUpdate.prototype.getBytesLeft=function(){return interop.invoke(this.instanceId,{method:"getBytesLeft"})};PatchVersionUpdate.prototype.getLastFileError=function(){return interop.invoke(this.instanceId,{method:"getLastFileError"})};PatchVersionUpdate.prototype.getFileAttempt=function(){return interop.invoke(this.instanceId,{method:"getFileAttempt"})};PatchVersionUpdate.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};
PatchVersionUpdate.prototype.resume=function(){return interop.invoke(this.instanceId,{method:"resume"})};PatchVersionUpdate.prototype.fail=function(){return interop.invoke(this.instanceId,{method:"fail"})};function createPatchVersionUpdate(){return interop.createInstance("SSN.PatchVersionUpdate",PatchVersionUpdate)}
function PatchVersionUpdateState(){this.IDLE=0;this.MASKING=1;this.EXTRACTVERSION=2;this.CALCULATESZE=3;this.UNINSTALL=4;this.UPDATEVERSION=5;this.STALLED=6;this.COMPLETE=7;this.FAILED=8}PatchVersionUpdateState.prototype.nameFromId=function(a){return"Idle Masking Extracting CalculatingSize Uninstalling Updating Stalled Complete Failed".split(" ")[a]};var patchVersionUpdateState=new PatchVersionUpdateState;function PatchVersionVerify(a){this.instanceId=a}PatchVersionVerify.prototype.release=function(){interop.releaseInstance(this.instanceId)};
PatchVersionVerify.prototype.getFileName=function(){return interop.invoke(this.instanceId,{method:"getFileName"})};PatchVersionVerify.prototype.setFileName=function(a){return interop.invoke(this.instanceId,{method:"setFileName",value:a})};PatchVersionVerify.prototype.getShortFileName=function(){return interop.invoke(this.instanceId,{method:"getShortFileName"})};PatchVersionVerify.prototype.getRunningTime=function(){return interop.invoke(this.instanceId,{method:"getRunningTime"})};
PatchVersionVerify.prototype.getAllowQuickScan=function(){return interop.invoke(this.instanceId,{method:"getAllowQuickScan"})};PatchVersionVerify.prototype.setAllowQuickScan=function(a){return interop.invoke(this.instanceId,{method:"setAllowQuickScan",value:a})};PatchVersionVerify.prototype.getAllowDeepScan=function(){return interop.invoke(this.instanceId,{method:"getAllowDeepScan"})};
PatchVersionVerify.prototype.setAllowDeepScan=function(a){return interop.invoke(this.instanceId,{method:"setAllowDeepScan",value:a})};PatchVersionVerify.prototype.getTotalBytes=function(){return interop.invoke(this.instanceId,{method:"getTotalBytes"})};PatchVersionVerify.prototype.getSelfUpdate=function(){return interop.invoke(this.instanceId,{method:"getSelfUpdate"})};PatchVersionVerify.prototype.getBytesLeft=function(){return interop.invoke(this.instanceId,{method:"getBytesLeft"})};
PatchVersionVerify.prototype.start=function(){return interop.invoke(this.instanceId,{method:"start"})};function createPatchVersionVerify(){return interop.createInstance("SSN.PatchVersionVerify",PatchVersionVerify)}
function PatchView(a,b){var c=this;this.instanceId=app.expandString("{Guid}");this.transferSpeedElement=this.progressBarElement=this.progressElement=this.bytesLeftElement=this.timeEstElement=this.patchesLeftElement=this.statusElement=this.updateElement=this.repairElement=this.launchElement=this.titleElement=this.rootElement=null;this.controller=a.controller;this.isUpcoming=!1;this.releaseIntervalId=null;this.allowViewBinding=!0;this.normalizeProgress=!1;this.subViews=[];this.observers=[];this.downloadView=
new DownloadView(a,b);this.downloadView.onUpdateElementOriginal=this.downloadView.onUpdateElement;this.downloadView.onUpdateElement=function(b,e){c.onDownloadUpdateElement(a,b,e)};this.downloadView.onUpdateProgressOriginal=this.downloadView.onUpdateProgress;this.downloadView.onUpdateProgress=function(b){c.onDownloadUpdateProgress(a,b)};this.downloadView.onChangeClassOriginal=this.downloadView.onChangeClass;this.downloadView.onChangeClass=function(b){c.onDownloadChangeClass(a,b)};this.downloadView.onWorkflowUnload=
function(){};this.downloadView.superView=this;this.observers.push(notificationCenter.addInstanceObserver("Task","Start",a,function(b,e){c.onStart(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("Task","SubTaskCreate",a,function(b,e){c.onSubTaskCreate(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("Workflow","WillUnload",workflow,function(b,e){c.onWorkflowUnload(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","Start",a.controller.patchQueue,
function(b,e){c.onPatchQueueStart(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","StateChange",a.controller.patchQueue,function(b,e){c.onPatchQueueStateChange(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","WillProcessPatch",a.controller.patchQueue,function(b,e){c.onPatchQueueWillProcessPatch(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","DidProcessPatch",a.controller.patchQueue,function(b,e){c.onPatchQueueDidProcessPatch(a,
e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchQueue","RequiredComplete",a.controller.patchQueue,function(b,e){c.onPatchQueueRequiredComplete(a,e)}));this.observers.push(notificationCenter.addInstanceObserver("PatchController","StateChange",a.controller,function(b,e){c.onPatchControllerStateChange(a,e)}))}
PatchView.prototype.release=function(){if(!isNull(this.controller)&&!isNull(this.controller.patchQueue)&&!0===this.controller.patchQueue.isPartial){if(isNull(this.releaseIntervalId)){var a=this;this.releaseIntervalId=setInterval(function(){a.release()},500)}}else if(isNull(this.releaseIntervalId)||(clearInterval(this.releaseIntervalId),this.releaseIntervalId=null),this.observers.forEach(function(a){a.release()}),this.observers=[],this.subViews.forEach(function(a){a.release()}),this.subViews=[],this.onTimerStop(),
isNull(this.rootElementClass)||(this.rootElementClass.release(),this.rootElementClass=null),isNull(this.progressBarElementClass)||(this.progressBarElementClass.release(),this.progressBarElementClass=null),isNull(this.downloadView)||(this.downloadView.release(),this.downloadView=null),!isNull(this.controller))this.controller.release(),this.controller=null};PatchView.prototype.patchProgressState={DOWNLOAD:0,PATCH:1,DISABLE:-1};
PatchView.prototype.onStart=function(a){var b=this;this.onPatchStart(a);notificationCenter.fire("PatchView","Bind",a,this);host.assert(!isNull(this.rootElement),"PatchView binding did not assign root element");this.rootElementClass=new ChangeClass(this.rootElement);isNull(this.progressBarElement)||(this.progressBarElementClass=new ChangeClass(this.progressBarElement));isNull(this.repairElement)||this.repairElement.unbind(".patchview");isNull(this.updateElement)||this.updateElement.unbind(".patchview");
isNull(this.launchElement)||this.launchElement.unbind(".patchview");isNull(this.repairElement)||this.repairElement.bind("click.patchview",null,function(){a.controller.repair()});isNull(this.updateElement)||this.updateElement.bind("click.patchview",null,function(){a.controller.update()});isNull(this.launchElement)||this.launchElement.bind("click.patchview",null,function(){b.launch(a)});this.onChangeClass("patchControllerStateIdle");this.onUpdateStatus(host.getLanguageString("PatchControllerState_Idle"));
this.onUpdateProgressInternal(-1)};PatchView.prototype.onPatchStart=function(a){var b=a.view;"patchgroup"==a.args.type.toLowerCase()&&(b.allowViewBinding=!1);hasOwnProperty(a.args,"normalizeProgress")&&(b.normalizeProgress=a.args.normalizeProgress,b.downloadView.normalizeProgress=b.normalizeProgress)};PatchView.prototype.onWorkflowUnload=function(){!isNull(this.controller)&&!isNull(this.controller.patchQueue)&&(this.controller.patchQueue.cancel=!0);this.release()};
PatchView.prototype.onSubTaskCreate=function(a,b){var c=this,d=b.subTask;this.onPatchStart(d);if(!1===c.allowViewBinding&&"patch"===d.args.type.toLowerCase()){d.view.allowViewBinding=c.allowViewBinding;var e=d.view.release;d.view.release=function(){!isNull(c.controller)&&!isNull(c.controller.patchQueue)&&!0===c.controller.patchQueue.isPartial?isNull(d.view.releaseIntervalId)&&(this.releaseIntervalId=setInterval(function(){d.view.release()},500)):(c.subViews.removeElement(d.view),e.call(d.view))};
d.view.onStart=function(){};d.view.onPatchControllerStateChange=function(){};this.subViews.push(d.view)}};PatchView.prototype.onTimerStart=function(){var a=this;isNull(this.timerId)&&(a.onTimer(),this.timerId=setInterval(function(){a.onTimer()},250))};PatchView.prototype.onTimerUpdate=function(a){var b=a.getTotalBytes(),a=a.getBytesLeft();this.onUpdateBytesLeft(messageFormat.getBytesLeft(a));if(0===b)this.onUpdateProgressInternal(-1);else this.onUpdateProgressInternal((b-a)/b)};
PatchView.prototype.onTimerUninstall=function(){this.onTimerUpdate(this.controller.patchQueue.versionUninstall)};PatchView.prototype.onTimerUpdateVersion=function(){this.onTimerUpdate(this.controller.patchQueue.versionUpdate)};
PatchView.prototype.onTimerPatch=function(){var a=this.controller.patchQueue.patch,b=a.getTotalBytes(),c=a.getBytesLeft();this.onTimerUpdate(a);this.onUpdateTimeEst(messageFormat.getTimeEstimate(a.getRemainingTime()));this.onUpdateBytesLeft(messageFormat.getBytesLeft(c));this.onUpdateTransferSpeed(messageFormat.getTransferSpeed(interop.parseJSON(a.getWriteRates()).average));if(0===b)this.onUpdateProgressInternal(-1);else this.onUpdateProgressInternal((b-c)/b,this.patchProgressState.PATCH)};
PatchView.prototype.onTimerVerify=function(){var a=this.controller.getVerifyTotalBytes(),b=this.controller.getVerifyBytesLeft();this.onUpdateBytesLeft(messageFormat.getBytesLeft(b));if(0===a)this.onUpdateProgressInternal(-1);else this.onUpdateProgressInternal((a-b)/a)};PatchView.prototype.onTimerStop=function(){isNull(this.timerId)||(clearInterval(this.timerId),this.timerId=null)};
PatchView.prototype.onTimerQueue=function(){switch(this.controller.patchQueue.getState()){case patchQueueState.PATCH:this.onTimerPatch();break;case patchQueueState.UNINSTALL:this.onTimerUninstall();break;case patchQueueState.UPDATINGVERSION:this.onTimerUpdateVersion()}};PatchView.prototype.onTimer=function(){if(!0===this.controller.patchQueue.isRunning)this.onTimerQueue();else this.onTimerVerify()};
PatchView.prototype.onUpdateElement=function(a,b){if(!isNull(a)){var c=a.html();c!==b&&(a.html(b),a.trigger("changed",[c,b]))}};PatchView.prototype.onUpdateTitle=function(a){this.onUpdateElement(this.titleElement,a)};PatchView.prototype.onUpdateStatus=function(a){this.onUpdateElement(this.statusElement,a)};PatchView.prototype.onUpdateTimeEst=function(a){this.onUpdateElement(this.timeEstElement,a)};PatchView.prototype.onUpdateBytesLeft=function(a){this.onUpdateElement(this.bytesLeftElement,a)};
PatchView.prototype.onUpdateTransferSpeed=function(a){this.onUpdateElement(this.transferSpeedElement,a)};PatchView.prototype.onUpdatePatchesLeft=function(a){this.onUpdateElement(this.patchesLeftElement,a)};
PatchView.prototype.onUpdateProgress=function(a){a={percent:parseInt(100*a,10)};notificationCenter.fire("TaskView","WillUpdateProgress",this,a);if((!isNull(this.progressElement)||!isNull(this.progressBarElement))&&a.percent!==this.lastPercent)this.lastPercent=a.percent,this.onUpdateElement(this.progressElement,Math.max(a.percent,0)+"%"),isNull(this.progressBarElement)||(0>a.percent?(this.progressBarElement.width("100%"),this.progressBarElementClass.apply("indefinite")):(this.progressBarElementClass.apply(null),
!0===host.isIE6?this.progressBarElement.width(Math.max(a.percent,1)+"%"):this.progressBarElement.width(a.percent+"%")),this.progressBarElement.trigger("updateProgress",a.percent))};
PatchView.prototype.onUpdateProgressInternal=function(a,b){var c=0,d=0,e,f=0,g,i,k=[0.5,0.5];if(this.normalizeProgress){if(!(0>=a||isNull(this.products)||isNull(b)))if(i=this.controller.patchQueue.currentPatchInfo,isNull(i))this.onUpdateProgress(a);else if(!isNull(i.filename)){for(var l in this.products)f+=1;for(l in this.products){e=this.products[l];d=0;stop=!1;for(var j=0;j<e.items.length;j+=1){g=e.items[j];for(var h=0;h<g.progress.length&&h!=b;h+=1)d+=k[h]*g.progress[h];if(g.id==i.filename){stop=
!0;break}}if(stop)break;c+=1}g.progress[b]=parseFloat(a);d+=k[b]*g.progress[b];d/=e.items.length;this.onUpdateProgress((c+d)/f)}}else this.onUpdateProgress(a)};PatchView.prototype.onPatchQueueStart=function(){this.isUpcoming=!1};
PatchView.prototype.onPatchQueueWillProcessPatch=function(a,b){var c=[],d=[];a.controller.patchQueue.patchesRequired.forEach(function(a){var b=a.versionName;a.versionName.endsWith(".version")?c.push(b.substring(0,b.lastIndexOf(".version"))):c.push(b);d.push(a)});if(isNull(this.products)){this.products={};for(var e=0;e<d.length;e+=1)isNull(this.products[c[e]])&&(this.products[c[e]]={name:c[e],items:[]}),this.products[c[e]].items.push({id:d[e].filename,progress:[0,0]})}if(!isNull(b.patchInfo.title))this.onUpdateTitle(messageFormat.getPatchTitle(b.patchInfo.title,
this.controller.isRepairing));this.onUpdatePatchesLeft(messageFormat.getPatchesLeft(this.controller.patchQueue.getRequiredCount()))};PatchView.prototype.onPatchQueueDidProcessPatch=function(){this.onUpdatePatchesLeft(messageFormat.getPatchesLeft(this.controller.patchQueue.getRequiredCount()))};PatchView.prototype.onPatchQueueRequiredComplete=function(){this.requiredComplete=this.isUpcoming=!0};
PatchView.prototype.onPatchQueueStateChange=function(a,b){if(b.state!==patchQueueState.DOWNLOAD)this.downloadView.onChangeClassOriginal(null);switch(b.state){case patchQueueState.PATCH:case patchQueueState.UNINSTALL:case patchQueueState.UPDATINGVERSION:this.onTimerStart();break;case patchQueueState.DOWNLOAD:this.onTimerStop();this.onUpdateProgressInternal(0);break;case patchQueueState.STALLED:case patchQueueState.UNINSTALLSTALLED:case patchQueueState.UPDATINGVERSIONSTALLED:this.onTimerStop();break;
default:this.onTimerStop(),this.onUpdateProgressInternal(-1)}};
PatchView.prototype.onPatchControllerStateChange=function(a,b){var c=patchControllerState.nameFromId(b.state);this.onChangeClass("patchControllerState"+c);switch(b.state){case patchControllerState.PATCH:case patchControllerState.VERIFY:this.onTimerStart();break;case patchControllerState.COMPLETE:case patchControllerState.FAIL:this.onTimerStop();this.onUpdateProgressInternal(1,this.patchProgressState.PATCH);break;case patchControllerState.UPDATE:case patchControllerState.REPAIR:this.onTimerStop();this.onUpdateProgressInternal(1);
break;default:this.onTimerStop(),this.onUpdateProgressInternal(1)}switch(b.state){case patchControllerState.FAIL:this.onUpdateStatus(host.getLanguageString(patcherError.errorStringFromId(this.controller.lastError)));break;default:this.onUpdateStatus(host.getLanguageString("PatchControllerState_"+c))}};PatchView.prototype.onDownloadUpdateElement=function(a,b,c){if(a.controller.patchQueue.getState()===patchQueueState.DOWNLOAD)this.downloadView.onUpdateElementOriginal(b,c)};
PatchView.prototype.onDownloadUpdateProgress=function(a,b){if(a.controller.patchQueue.getState()===patchQueueState.DOWNLOAD)this.onUpdateProgressInternal(b,this.patchProgressState.DOWNLOAD)};PatchView.prototype.onDownloadChangeClass=function(a,b){if(a.controller.patchQueue.getState()===patchQueueState.DOWNLOAD)this.downloadView.onChangeClassOriginal(b)};PatchView.prototype.launch=function(a){isNull(a.args.launch)||(this.downloadView.onChangeClassOriginal(null),a.controller.launch(a))};
PatchView.prototype.onChangeClass=function(a){isNull(this.rootElementClass)||this.rootElementClass.apply(a)};registerTaskView("patch",PatchView);registerTaskView("patchgroup",PatchView);
